name: Build, Test and Deploy
on:
  push:
  release:
    types:
      - published

jobs:
  build:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.22
        id: go
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build for Raspberry 2 
        run: |
          GOOS=linux 
          GOARCH=arm 
          GOARM=6
          go test -C src ./...

      - name: Build for Raspberry 3
        run: |
          GOOS=linux 
          GOARCH=arm 
          GOARM=6
          go test -C src ./...

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      PROJECT: raspi_sms_gateway
      GOOS: linux 
      GOARCH: arm
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build for Raspberry 2 
        run: |
          GOARM=6
          go build -C src -o ../bin/$PROJECT_$GOOS_$GOARCH_$GOARM

      - name: Build for Raspberry 3
        run: |
          GOARM=7
          go build -C src -o ../bin/$PROJECT_$GOOS_$GOARCH_$GOARM

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset arm6
        id: upload-release-asset-arm6
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GOARM: 6

        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin
          asset_name: $PROJECT_$GOOS_$GOARCH_$GOARM
          asset_content_type: application/octet-stream

      - name: Upload Release Asset arm7
        id: upload-release-asset-arm7
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GOARM: 7

        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin
          asset_name: $PROJECT_$GOOS_$GOARCH_$GOARM
          asset_content_type: application/octet-stream